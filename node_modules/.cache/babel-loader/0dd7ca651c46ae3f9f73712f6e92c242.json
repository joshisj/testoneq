{"ast":null,"code":"import invariant from 'invariant';\nimport { BaseField } from 'uniforms';\nimport { createElement } from 'react';\nimport BoolField from './BoolField';\nimport DateField from './DateField';\nimport ListField from './ListField';\nimport NestField from './NestField';\nimport NumField from './NumField';\nimport RadioField from './RadioField';\nimport SelectField from './SelectField';\nimport TextField from './TextField';\nexport default class AutoField extends BaseField {\n  getChildContextName() {\n    return this.context.uniforms.name;\n  }\n\n  render() {\n    const props = this.getFieldProps(undefined, {\n      ensureValue: false\n    });\n\n    if (props.component === undefined) {\n      if (props.allowedValues) {\n        if (props.checkboxes && props.fieldType !== Array) {\n          props.component = RadioField;\n        } else {\n          props.component = SelectField;\n        }\n      } else {\n        switch (props.fieldType) {\n          case Date:\n            props.component = DateField;\n            break;\n\n          case Array:\n            props.component = ListField;\n            break;\n\n          case Number:\n            props.component = NumField;\n            break;\n\n          case Object:\n            props.component = NestField;\n            break;\n\n          case String:\n            props.component = TextField;\n            break;\n\n          case Boolean:\n            props.component = BoolField;\n            break;\n        }\n\n        invariant(props.component, 'Unsupported field type: %s', props.fieldType.toString());\n      }\n    }\n\n    return createElement(props.component, this.props);\n  }\n\n}\nAutoField.displayName = 'AutoField';","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/secondary/node_modules/uniforms-semantic/es6/AutoField.js"],"names":["invariant","BaseField","createElement","BoolField","DateField","ListField","NestField","NumField","RadioField","SelectField","TextField","AutoField","getChildContextName","context","uniforms","name","render","props","getFieldProps","undefined","ensureValue","component","allowedValues","checkboxes","fieldType","Array","Date","Number","Object","String","Boolean","toString","displayName"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,eAAe,MAAMC,SAAN,SAAwBV,SAAxB,CAAkC;AAC7CW,EAAAA,mBAAmB,GAAG;AAClB,WAAO,KAAKC,OAAL,CAAaC,QAAb,CAAsBC,IAA7B;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKC,aAAL,CAAmBC,SAAnB,EAA8B;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAA9B,CAAd;;AACA,QAAIH,KAAK,CAACI,SAAN,KAAoBF,SAAxB,EAAmC;AAC/B,UAAIF,KAAK,CAACK,aAAV,EAAyB;AACrB,YAAIL,KAAK,CAACM,UAAN,IAAoBN,KAAK,CAACO,SAAN,KAAoBC,KAA5C,EAAmD;AAC/CR,UAAAA,KAAK,CAACI,SAAN,GAAkBb,UAAlB;AACH,SAFD,MAGK;AACDS,UAAAA,KAAK,CAACI,SAAN,GAAkBZ,WAAlB;AACH;AACJ,OAPD,MAQK;AACD,gBAAQQ,KAAK,CAACO,SAAd;AACI,eAAKE,IAAL;AACIT,YAAAA,KAAK,CAACI,SAAN,GAAkBjB,SAAlB;AACA;;AACJ,eAAKqB,KAAL;AACIR,YAAAA,KAAK,CAACI,SAAN,GAAkBhB,SAAlB;AACA;;AACJ,eAAKsB,MAAL;AACIV,YAAAA,KAAK,CAACI,SAAN,GAAkBd,QAAlB;AACA;;AACJ,eAAKqB,MAAL;AACIX,YAAAA,KAAK,CAACI,SAAN,GAAkBf,SAAlB;AACA;;AACJ,eAAKuB,MAAL;AACIZ,YAAAA,KAAK,CAACI,SAAN,GAAkBX,SAAlB;AACA;;AACJ,eAAKoB,OAAL;AACIb,YAAAA,KAAK,CAACI,SAAN,GAAkBlB,SAAlB;AACA;AAlBR;;AAoBAH,QAAAA,SAAS,CAACiB,KAAK,CAACI,SAAP,EAAkB,4BAAlB,EAAgDJ,KAAK,CAACO,SAAN,CAAgBO,QAAhB,EAAhD,CAAT;AACH;AACJ;;AACD,WAAO7B,aAAa,CAACe,KAAK,CAACI,SAAP,EAAkB,KAAKJ,KAAvB,CAApB;AACH;;AAxC4C;AA0CjDN,SAAS,CAACqB,WAAV,GAAwB,WAAxB","sourcesContent":["import invariant from 'invariant';\nimport { BaseField } from 'uniforms';\nimport { createElement } from 'react';\nimport BoolField from './BoolField';\nimport DateField from './DateField';\nimport ListField from './ListField';\nimport NestField from './NestField';\nimport NumField from './NumField';\nimport RadioField from './RadioField';\nimport SelectField from './SelectField';\nimport TextField from './TextField';\nexport default class AutoField extends BaseField {\n    getChildContextName() {\n        return this.context.uniforms.name;\n    }\n    render() {\n        const props = this.getFieldProps(undefined, { ensureValue: false });\n        if (props.component === undefined) {\n            if (props.allowedValues) {\n                if (props.checkboxes && props.fieldType !== Array) {\n                    props.component = RadioField;\n                }\n                else {\n                    props.component = SelectField;\n                }\n            }\n            else {\n                switch (props.fieldType) {\n                    case Date:\n                        props.component = DateField;\n                        break;\n                    case Array:\n                        props.component = ListField;\n                        break;\n                    case Number:\n                        props.component = NumField;\n                        break;\n                    case Object:\n                        props.component = NestField;\n                        break;\n                    case String:\n                        props.component = TextField;\n                        break;\n                    case Boolean:\n                        props.component = BoolField;\n                        break;\n                }\n                invariant(props.component, 'Unsupported field type: %s', props.fieldType.toString());\n            }\n        }\n        return createElement(props.component, this.props);\n    }\n}\nAutoField.displayName = 'AutoField';\n"]},"metadata":{},"sourceType":"module"}