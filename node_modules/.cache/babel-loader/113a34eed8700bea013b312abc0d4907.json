{"ast":null,"code":"import invariant from 'invariant';\nconst registered = [];\n\nfunction create(schema) {\n  // There's no need for an extra wrapper.\n  if (isBridge(schema)) {\n    return schema;\n  }\n\n  const Bridge = registered.find(bridge => bridge.check(schema));\n  invariant(Bridge, 'Unrecognised schema: %s', schema);\n  return new Bridge(schema);\n}\n\nfunction isBridge(schema) {\n  return !!(schema && schema.getError && schema.getErrorMessage && schema.getErrorMessages && schema.getField && schema.getInitialValue && schema.getProps && schema.getSubfields && schema.getType && schema.getValidator);\n}\n\nfunction register(bridge) {\n  registered.unshift(bridge);\n}\n\nexport default Object.assign(create, {\n  register,\n  registered\n});","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/oneq-account/oneq-prod/node_modules/uniforms/es6/createSchemaBridge.js"],"names":["invariant","registered","create","schema","isBridge","Bridge","find","bridge","check","getError","getErrorMessage","getErrorMessages","getField","getInitialValue","getProps","getSubfields","getType","getValidator","register","unshift","Object","assign"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,MAAMC,UAAU,GAAG,EAAnB;;AACA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACpB;AACA,MAAIC,QAAQ,CAACD,MAAD,CAAZ,EAAsB;AAClB,WAAOA,MAAP;AACH;;AACD,QAAME,MAAM,GAAGJ,UAAU,CAACK,IAAX,CAAgBC,MAAM,IAAIA,MAAM,CAACC,KAAP,CAAaL,MAAb,CAA1B,CAAf;AACAH,EAAAA,SAAS,CAACK,MAAD,EAAS,yBAAT,EAAoCF,MAApC,CAAT;AACA,SAAO,IAAIE,MAAJ,CAAWF,MAAX,CAAP;AACH;;AACD,SAASC,QAAT,CAAkBD,MAAlB,EAA0B;AACtB,SAAO,CAAC,EAAEA,MAAM,IACZA,MAAM,CAACM,QADD,IAENN,MAAM,CAACO,eAFD,IAGNP,MAAM,CAACQ,gBAHD,IAINR,MAAM,CAACS,QAJD,IAKNT,MAAM,CAACU,eALD,IAMNV,MAAM,CAACW,QAND,IAONX,MAAM,CAACY,YAPD,IAQNZ,MAAM,CAACa,OARD,IASNb,MAAM,CAACc,YATH,CAAR;AAUH;;AACD,SAASC,QAAT,CAAkBX,MAAlB,EAA0B;AACtBN,EAAAA,UAAU,CAACkB,OAAX,CAAmBZ,MAAnB;AACH;;AACD,eAAea,MAAM,CAACC,MAAP,CAAcnB,MAAd,EAAsB;AAAEgB,EAAAA,QAAF;AAAYjB,EAAAA;AAAZ,CAAtB,CAAf","sourcesContent":["import invariant from 'invariant';\nconst registered = [];\nfunction create(schema) {\n    // There's no need for an extra wrapper.\n    if (isBridge(schema)) {\n        return schema;\n    }\n    const Bridge = registered.find(bridge => bridge.check(schema));\n    invariant(Bridge, 'Unrecognised schema: %s', schema);\n    return new Bridge(schema);\n}\nfunction isBridge(schema) {\n    return !!(schema &&\n        schema.getError &&\n        schema.getErrorMessage &&\n        schema.getErrorMessages &&\n        schema.getField &&\n        schema.getInitialValue &&\n        schema.getProps &&\n        schema.getSubfields &&\n        schema.getType &&\n        schema.getValidator);\n}\nfunction register(bridge) {\n    registered.unshift(bridge);\n}\nexport default Object.assign(create, { register, registered });\n"]},"metadata":{},"sourceType":"module"}