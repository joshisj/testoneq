{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n/*\n  Code source:\n    https://github.com/jxson/string-humanize\n    https://github.com/jxson/string-capitalize\n */\n\nfunction capitalize(text) {\n  text = text || '';\n  text = text.trim();\n\n  if (text[0]) {\n    text = text[0].toUpperCase() + text.substr(1).toLowerCase();\n  } // Do \"ID\" instead of \"id\" or \"Id\"\n\n\n  text = text.replace(/\\bid\\b/g, 'ID');\n  text = text.replace(/\\bId\\b/g, 'ID');\n  return text;\n}\n\nfunction underscore(text) {\n  text = text || '';\n  text = text.toString(); // might be a number\n\n  text = text.trim();\n  text = text.replace(/([a-z\\d])([A-Z]+)/g, '$1_$2');\n  text = text.replace(/[-\\s]+/g, '_').toLowerCase();\n  return text;\n}\n\nfunction extname(text) {\n  var index = text.lastIndexOf('.');\n  var ext = text.substring(index, text.length);\n  return index === -1 ? '' : ext;\n}\n\nfunction humanize(text) {\n  text = text || '';\n  text = text.toString(); // might be a number\n\n  text = text.trim();\n  text = text.replace(extname(text), '');\n  text = underscore(text);\n  text = text.replace(/[\\W_]+/g, ' ');\n  return capitalize(text);\n}\n\nvar _default = humanize;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/oneq-account/prod/node_modules/simpl-schema/dist/humanize.js"],"names":["Object","defineProperty","exports","value","default","capitalize","text","trim","toUpperCase","substr","toLowerCase","replace","underscore","toString","extname","index","lastIndexOf","ext","substring","length","humanize","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AAEA;;;;;;AAKA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxBA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,EAAP;;AAEA,MAAID,IAAI,CAAC,CAAD,CAAR,EAAa;AACXA,IAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAJ,CAAQE,WAAR,KAAwBF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,WAAf,EAA/B;AACD,GANuB,CAMtB;;;AAGFJ,EAAAA,IAAI,GAAGA,IAAI,CAACK,OAAL,CAAa,SAAb,EAAwB,IAAxB,CAAP;AACAL,EAAAA,IAAI,GAAGA,IAAI,CAACK,OAAL,CAAa,SAAb,EAAwB,IAAxB,CAAP;AACA,SAAOL,IAAP;AACD;;AAED,SAASM,UAAT,CAAoBN,IAApB,EAA0B;AACxBA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACO,QAAL,EAAP,CAFwB,CAEA;;AAExBP,EAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,EAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACK,OAAL,CAAa,oBAAb,EAAmC,OAAnC,CAAP;AACAL,EAAAA,IAAI,GAAGA,IAAI,CAACK,OAAL,CAAa,SAAb,EAAwB,GAAxB,EAA6BD,WAA7B,EAAP;AACA,SAAOJ,IAAP;AACD;;AAED,SAASQ,OAAT,CAAiBR,IAAjB,EAAuB;AACrB,MAAIS,KAAK,GAAGT,IAAI,CAACU,WAAL,CAAiB,GAAjB,CAAZ;AACA,MAAIC,GAAG,GAAGX,IAAI,CAACY,SAAL,CAAeH,KAAf,EAAsBT,IAAI,CAACa,MAA3B,CAAV;AACA,SAAOJ,KAAK,KAAK,CAAC,CAAX,GAAe,EAAf,GAAoBE,GAA3B;AACD;;AAED,SAASG,QAAT,CAAkBd,IAAlB,EAAwB;AACtBA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACO,QAAL,EAAP,CAFsB,CAEE;;AAExBP,EAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,EAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACK,OAAL,CAAaG,OAAO,CAACR,IAAD,CAApB,EAA4B,EAA5B,CAAP;AACAA,EAAAA,IAAI,GAAGM,UAAU,CAACN,IAAD,CAAjB;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACK,OAAL,CAAa,SAAb,EAAwB,GAAxB,CAAP;AACA,SAAON,UAAU,CAACC,IAAD,CAAjB;AACD;;AAED,IAAIe,QAAQ,GAAGD,QAAf;AACAlB,OAAO,CAACE,OAAR,GAAkBiB,QAAlB;AACAC,MAAM,CAACpB,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAkB,MAAM,CAACpB,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n  Code source:\n    https://github.com/jxson/string-humanize\n    https://github.com/jxson/string-capitalize\n */\nfunction capitalize(text) {\n  text = text || '';\n  text = text.trim();\n\n  if (text[0]) {\n    text = text[0].toUpperCase() + text.substr(1).toLowerCase();\n  } // Do \"ID\" instead of \"id\" or \"Id\"\n\n\n  text = text.replace(/\\bid\\b/g, 'ID');\n  text = text.replace(/\\bId\\b/g, 'ID');\n  return text;\n}\n\nfunction underscore(text) {\n  text = text || '';\n  text = text.toString(); // might be a number\n\n  text = text.trim();\n  text = text.replace(/([a-z\\d])([A-Z]+)/g, '$1_$2');\n  text = text.replace(/[-\\s]+/g, '_').toLowerCase();\n  return text;\n}\n\nfunction extname(text) {\n  var index = text.lastIndexOf('.');\n  var ext = text.substring(index, text.length);\n  return index === -1 ? '' : ext;\n}\n\nfunction humanize(text) {\n  text = text || '';\n  text = text.toString(); // might be a number\n\n  text = text.trim();\n  text = text.replace(extname(text), '');\n  text = underscore(text);\n  text = text.replace(/[\\W_]+/g, ' ');\n  return capitalize(text);\n}\n\nvar _default = humanize;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}