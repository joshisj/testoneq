{"ast":null,"code":"import Ajv from 'ajv';\nimport SimpleSchema from 'simpl-schema';\nimport SimpleSchema2Bridge from 'uniforms-bridge-simple-schema-2'; // NOTE:  Uniforms tutorial omitted this line below, needed to compile\n\nimport { LongTextField, DateField } from 'uniforms-semantic';\nconst formValues = {\n  activityTypes: ['Meeting / Office Hours [Management]', 'Service Deep Dive [Workshops]', 'AOD/SME/Specialist [Thought Leadership]', 'Architecture Review [Architecture]', 'Immersion Day [Workshops]'],\n  activityTopics: ['Analytics', 'Application Development', 'Athena', 'Cloudendure Migration', 'Immersion Day [Workshops]'],\n  activityDomains: ['Blockchain', 'Compute/HPC', 'Containers', 'AI/ML'],\n  activityComplexity: ['100: Introductory and overview engagement', '200: Intermediate engagement; requires specific details about the topic', '300: Advanced material; requires in-depth understanding of features in a real-world environment', '400: Expert engagement; requires expert-to-expert interaction and coverage of specialized topics'],\n  activityInteractionType: ['Virtual Meeting', 'Onsite Meeting', 'Email'],\n  activityPriority: ['Low', 'Moderate', 'High']\n};\nconst simpleRequestSchema = new SimpleSchema({\n  accountLink: {\n    label: 'Salesforce Account Link',\n    type: String\n  },\n  accountName: {\n    label: 'Account Name',\n    type: String\n  },\n  activityRequester: {\n    label: 'Requester',\n    type: String\n  },\n  accountOpportunity: {\n    label: 'Salesforce Opportunity Link',\n    type: String\n  },\n  activityTitle: {\n    label: 'Activity Title',\n    type: String\n  },\n  activityType: {\n    label: 'Activity Type',\n    type: String,\n    allowedValues: formValues.activityTypes\n  },\n  activityTopic: {\n    label: 'Topic',\n    type: String,\n    allowedValues: formValues.activityTopics\n  },\n  activityDomain: {\n    label: 'Domain',\n    type: String,\n    allowedValues: formValues.activityDomains\n  },\n  activityComplexity: {\n    label: 'Complexity',\n    type: String,\n    allowedValues: formValues.activityComplexity\n  },\n  activityDetails: {\n    label: 'Activity Details',\n    type: String,\n    optional: true,\n    defaultValue: ''\n  },\n  activityFromDate: {\n    label: 'Date Range From:',\n    type: Date,\n    defaultValue: new Date()\n  },\n  activityToDate: {\n    label: 'Date Range To:',\n    type: Date,\n    defaultValue: new Date()\n  },\n  activityLocation: {\n    label: 'Activity Location',\n    type: String\n  },\n  activityInteractionType: {\n    label: 'Interaction Type',\n    type: String,\n    allowedValues: formValues.activityInteractionType\n  },\n  activityLanguage: {\n    label: 'Language',\n    optional: true,\n    type: String\n  },\n  activityAM: {\n    label: 'Account Manager Alias',\n    optional: true,\n    type: String\n  },\n  activityrequestedSA: {\n    label: 'Requested SA(if any)',\n    optional: true,\n    type: String\n  },\n  activityPriority: {\n    label: 'Priority',\n    type: String,\n    allowedValues: formValues.activityPriority\n  },\n  activityRegion: {\n    label: 'Region',\n    type: String\n  },\n  activitySubregion: {\n    label: 'Sub-Region',\n    type: String\n  },\n  activityTerritory: {\n    label: 'Territory',\n    type: String\n  },\n  activityWatchers: {\n    label: 'Watchers',\n    optional: true,\n    type: String\n  },\n  activitySubtopic: {\n    label: 'Sub-Topic',\n    optional: true,\n    type: String\n  }\n});\nconst ajv = new Ajv({\n  allErrors: true,\n  useDefaults: true\n});\n\nfunction createValidator(schema) {\n  const validator = ajv.compile(schema);\n  return model => {\n    validator(model);\n\n    if (validator.errors && validator.errors.length) {\n      throw {\n        details: validator.errors\n      };\n    }\n  };\n}\n\nconst schemaValidator = createValidator(simpleRequestSchema);\nconst bridge = new SimpleSchema2Bridge(simpleRequestSchema, schemaValidator);\nexport default bridge;","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/myaccount/scratch/src/saRequestSchema.js"],"names":["Ajv","SimpleSchema","SimpleSchema2Bridge","LongTextField","DateField","formValues","activityTypes","activityTopics","activityDomains","activityComplexity","activityInteractionType","activityPriority","simpleRequestSchema","accountLink","label","type","String","accountName","activityRequester","accountOpportunity","activityTitle","activityType","allowedValues","activityTopic","activityDomain","activityDetails","optional","defaultValue","activityFromDate","Date","activityToDate","activityLocation","activityLanguage","activityAM","activityrequestedSA","activityRegion","activitySubregion","activityTerritory","activityWatchers","activitySubtopic","ajv","allErrors","useDefaults","createValidator","schema","validator","compile","model","errors","length","details","schemaValidator","bridge"],"mappings":"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","sourcesContent":["import Ajv from 'ajv';\nimport SimpleSchema from 'simpl-schema';\nimport SimpleSchema2Bridge from 'uniforms-bridge-simple-schema-2';\n\n// NOTE:  Uniforms tutorial omitted this line below, needed to compile\nimport {LongTextField, DateField} from 'uniforms-semantic';\n\nconst formValues = {\n    activityTypes: [\n        'Meeting / Office Hours [Management]',\n        'Service Deep Dive [Workshops]',\n        'AOD/SME/Specialist [Thought Leadership]',\n        'Architecture Review [Architecture]',\n        'Immersion Day [Workshops]'\n    ],\n    activityTopics: [\n        'Analytics',\n        'Application Development',\n        'Athena',\n        'Cloudendure Migration',\n        'Immersion Day [Workshops]'\n    ],\n    activityDomains: [\n        'Blockchain',\n        'Compute/HPC',\n        'Containers',\n        'AI/ML'\n    ],\n    activityComplexity: [\n        '100: Introductory and overview engagement',\n        '200: Intermediate engagement; requires specific details about the topic',\n        '300: Advanced material; requires in-depth understanding of features in a real-world environment',\n        '400: Expert engagement; requires expert-to-expert interaction and coverage of specialized topics'\n    ],\n    activityInteractionType: [\n        'Virtual Meeting',\n        'Onsite Meeting',\n        'Email'\n    ],\n    activityPriority:[\n        'Low',\n        'Moderate',\n        'High'\n    ],\n\n};\n\nconst simpleRequestSchema = new SimpleSchema({\n    accountLink: { label: 'Salesforce Account Link', type: String },\n    accountName: { label: 'Account Name', type: String },\n    activityRequester: {label: 'Requester', type: String},\n    accountOpportunity: { label: 'Salesforce Opportunity Link', type: String },\n    activityTitle: { label: 'Activity Title', type: String },\n    activityType: { label: 'Activity Type', type: String, allowedValues: formValues.activityTypes },\n    activityTopic: { label: 'Topic', type: String, allowedValues: formValues.activityTopics },\n    activityDomain: { label: 'Domain', type: String, allowedValues: formValues.activityDomains },\n    activityComplexity: { label: 'Complexity', type: String, allowedValues: formValues.activityComplexity },\n    activityDetails: { label: 'Activity Details', type: String, optional: true, defaultValue: '' },\n    activityFromDate: { label: 'Date Range From:', type: Date, defaultValue: new Date() },\n    activityToDate: { label: 'Date Range To:', type: Date, defaultValue: new Date() },\n    activityLocation: { label: 'Activity Location', type: String },\n    activityInteractionType: { label: 'Interaction Type', type: String, allowedValues: formValues.activityInteractionType },\n    activityLanguage: {label: 'Language', optional: true, type: String},\n    activityAM: {label: 'Account Manager Alias', optional: true, type: String},\n    activityrequestedSA: {label: 'Requested SA(if any)', optional: true, type: String},\n    activityPriority: {label:'Priority', type: String, allowedValues: formValues.activityPriority},\n    activityRegion: {label: 'Region', type: String},\n    activitySubregion: {label: 'Sub-Region', type: String},\n    activityTerritory: {label: 'Territory', type: String},\n    activityWatchers: {label: 'Watchers', optional: true, type: String},\n    activitySubtopic: {label: 'Sub-Topic', optional: true, type: String}\n});\n\n\nconst ajv = new Ajv({ allErrors: true, useDefaults: true });\n\nfunction createValidator(schema) {\n    const validator = ajv.compile(schema);\n\n    return model => {\n        validator(model);\n\n        if (validator.errors && validator.errors.length) {\n            throw { details: validator.errors };\n        }\n    };\n}\n\nconst schemaValidator = createValidator(simpleRequestSchema);\n\nconst bridge = new SimpleSchema2Bridge(simpleRequestSchema, schemaValidator);\n\nexport default bridge;"]},"metadata":{},"sourceType":"module"}