{"ast":null,"code":"import React from 'react';\nimport { BaseField, filterDOMProps, nothing } from 'uniforms';\nexport default class HiddenField extends BaseField {\n  constructor() {\n    // @ts-ignore\n    super(...arguments);\n    this.options = {\n      ensureValue: true,\n      overrideValue: true\n    };\n  }\n\n  componentWillReceiveProps({\n    value: valueDesired\n  }) {\n    if (valueDesired === undefined) {\n      return;\n    }\n\n    const props = this.getFieldProps();\n\n    if (props.value !== valueDesired) {\n      props.onChange(valueDesired);\n    }\n  }\n\n  render() {\n    const props = this.getFieldProps();\n    return props.noDOM ? nothing : React.createElement(\"input\", Object.assign({\n      disabled: props.disabled,\n      id: props.id,\n      name: props.name,\n      ref: props.inputRef,\n      type: \"hidden\",\n      value: props.value\n    }, filterDOMProps(props)));\n  }\n\n}\nHiddenField.displayName = 'HiddenField';","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/myaccount/scratch/node_modules/uniforms-semantic/es6/HiddenField.js"],"names":["React","BaseField","filterDOMProps","nothing","HiddenField","constructor","arguments","options","ensureValue","overrideValue","componentWillReceiveProps","value","valueDesired","undefined","props","getFieldProps","onChange","render","noDOM","createElement","Object","assign","disabled","id","name","ref","inputRef","type","displayName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,OAApC,QAAmD,UAAnD;AACA,eAAe,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAC/CI,EAAAA,WAAW,GAAG;AACV;AACA,UAAM,GAAGC,SAAT;AACA,SAAKC,OAAL,GAAe;AACXC,MAAAA,WAAW,EAAE,IADF;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAf;AAIH;;AACDC,EAAAA,yBAAyB,CAAC;AAAEC,IAAAA,KAAK,EAAEC;AAAT,GAAD,EAA0B;AAC/C,QAAIA,YAAY,KAAKC,SAArB,EAAgC;AAC5B;AACH;;AACD,UAAMC,KAAK,GAAG,KAAKC,aAAL,EAAd;;AACA,QAAID,KAAK,CAACH,KAAN,KAAgBC,YAApB,EAAkC;AAC9BE,MAAAA,KAAK,CAACE,QAAN,CAAeJ,YAAf;AACH;AACJ;;AACDK,EAAAA,MAAM,GAAG;AACL,UAAMH,KAAK,GAAG,KAAKC,aAAL,EAAd;AACA,WAAOD,KAAK,CAACI,KAAN,GAAef,OAAf,GAA2BH,KAAK,CAACmB,aAAN,CAAoB,OAApB,EAA6BC,MAAM,CAACC,MAAP,CAAc;AAAEC,MAAAA,QAAQ,EAAER,KAAK,CAACQ,QAAlB;AAA4BC,MAAAA,EAAE,EAAET,KAAK,CAACS,EAAtC;AAA0CC,MAAAA,IAAI,EAAEV,KAAK,CAACU,IAAtD;AAA4DC,MAAAA,GAAG,EAAEX,KAAK,CAACY,QAAvE;AAAiFC,MAAAA,IAAI,EAAE,QAAvF;AAAiGhB,MAAAA,KAAK,EAAEG,KAAK,CAACH;AAA9G,KAAd,EAAqIT,cAAc,CAACY,KAAD,CAAnJ,CAA7B,CAAlC;AACH;;AArB8C;AAuBnDV,WAAW,CAACwB,WAAZ,GAA0B,aAA1B","sourcesContent":["import React from 'react';\nimport { BaseField, filterDOMProps, nothing } from 'uniforms';\nexport default class HiddenField extends BaseField {\n    constructor() {\n        // @ts-ignore\n        super(...arguments);\n        this.options = {\n            ensureValue: true,\n            overrideValue: true,\n        };\n    }\n    componentWillReceiveProps({ value: valueDesired }) {\n        if (valueDesired === undefined) {\n            return;\n        }\n        const props = this.getFieldProps();\n        if (props.value !== valueDesired) {\n            props.onChange(valueDesired);\n        }\n    }\n    render() {\n        const props = this.getFieldProps();\n        return props.noDOM ? (nothing) : (React.createElement(\"input\", Object.assign({ disabled: props.disabled, id: props.id, name: props.name, ref: props.inputRef, type: \"hidden\", value: props.value }, filterDOMProps(props))));\n    }\n}\nHiddenField.displayName = 'HiddenField';\n"]},"metadata":{},"sourceType":"module"}