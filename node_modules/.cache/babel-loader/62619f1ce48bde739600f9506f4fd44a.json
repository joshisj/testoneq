{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _clone = _interopRequireDefault(require(\"clone\"));\n\nvar _utility = require(\"../utility\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction getFieldInfo(mongoObject, key) {\n  var keyInfo = mongoObject.getInfoForKey(key) || {};\n  return {\n    isSet: keyInfo.value !== undefined,\n    value: keyInfo.value,\n    operator: keyInfo.operator || null\n  };\n}\n\nvar AutoValueRunner = /*#__PURE__*/function () {\n  function AutoValueRunner(options) {\n    _classCallCheck(this, AutoValueRunner);\n\n    this.options = options;\n    this.doneKeys = [];\n  }\n\n  _createClass(AutoValueRunner, [{\n    key: \"runForPosition\",\n    value: function runForPosition(_ref) {\n      var affectedKey = _ref.key,\n          operator = _ref.operator,\n          position = _ref.position,\n          value = _ref.value;\n      var _this$options = this.options,\n          closestSubschemaFieldName = _this$options.closestSubschemaFieldName,\n          extendedAutoValueContext = _this$options.extendedAutoValueContext,\n          func = _this$options.func,\n          isModifier = _this$options.isModifier,\n          isUpsert = _this$options.isUpsert,\n          mongoObject = _this$options.mongoObject; // If already called for this key, skip it\n\n      if (this.doneKeys.includes(affectedKey)) return;\n      var fieldParentName = (0, _utility.getParentOfKey)(affectedKey, true);\n      var parentFieldInfo = getFieldInfo(mongoObject, fieldParentName.slice(0, -1));\n      var doUnset = false;\n\n      if (Array.isArray(parentFieldInfo.value)) {\n        if (isNaN(affectedKey.split('.').slice(-1).pop())) {\n          // parent is an array, but the key to be set is not an integer (see issue #80)\n          return;\n        }\n      }\n\n      var autoValue = func.call(_objectSpread({\n        closestSubschemaFieldName: closestSubschemaFieldName.length ? closestSubschemaFieldName : null,\n        field: function field(fName) {\n          return getFieldInfo(mongoObject, closestSubschemaFieldName + fName);\n        },\n        isModifier: isModifier,\n        isUpsert: isUpsert,\n        isSet: value !== undefined,\n        key: affectedKey,\n        operator: operator,\n        parentField: function parentField() {\n          return parentFieldInfo;\n        },\n        siblingField: function siblingField(fName) {\n          return getFieldInfo(mongoObject, fieldParentName + fName);\n        },\n        unset: function unset() {\n          doUnset = true;\n        },\n        value: value\n      }, extendedAutoValueContext || {}), mongoObject.getObject()); // Update tracking of which keys we've run autovalue for\n\n      this.doneKeys.push(affectedKey);\n      if (doUnset && position) mongoObject.removeValueForPosition(position);\n      if (autoValue === undefined) return; // If the user's auto value is of the pseudo-modifier format, parse it\n      // into operator and value.\n\n      if (isModifier) {\n        var op;\n        var newValue;\n\n        if (autoValue && _typeof(autoValue) === 'object') {\n          var avOperator = Object.keys(autoValue).find(function (avProp) {\n            return avProp.substring(0, 1) === '$';\n          });\n\n          if (avOperator) {\n            op = avOperator;\n            newValue = autoValue[avOperator];\n          }\n        } // Add $set for updates and upserts if necessary. Keep this\n        // above the \"if (op)\" block below since we might change op\n        // in this line.\n\n\n        if (!op && position.slice(0, 1) !== '$') {\n          op = '$set';\n          newValue = autoValue;\n        }\n\n        if (op) {\n          // Update/change value\n          mongoObject.removeValueForPosition(position);\n          mongoObject.setValueForPosition(\"\".concat(op, \"[\").concat(affectedKey, \"]\"), (0, _clone.default)(newValue));\n          return;\n        }\n      } // Update/change value. Cloning is necessary in case it's an object, because\n      // if we later set some keys within it, they'd be set on the original object, too.\n\n\n      mongoObject.setValueForPosition(position, (0, _clone.default)(autoValue));\n    }\n  }]);\n\n  return AutoValueRunner;\n}();\n\nexports.default = AutoValueRunner;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/secondary/node_modules/simpl-schema/dist/clean/AutoValueRunner.js"],"names":["Object","defineProperty","exports","value","default","_clone","_interopRequireDefault","require","_utility","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","getFieldInfo","mongoObject","keyInfo","getInfoForKey","isSet","undefined","operator","AutoValueRunner","options","doneKeys","runForPosition","_ref","affectedKey","position","_this$options","closestSubschemaFieldName","extendedAutoValueContext","func","isModifier","isUpsert","includes","fieldParentName","getParentOfKey","parentFieldInfo","slice","doUnset","Array","isArray","isNaN","split","pop","autoValue","call","field","fName","parentField","siblingField","unset","getObject","removeValueForPosition","op","newValue","avOperator","find","avProp","substring","setValueForPosition","concat","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _clone = _interopRequireDefault(require(\"clone\"));\n\nvar _utility = require(\"../utility\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction getFieldInfo(mongoObject, key) {\n  var keyInfo = mongoObject.getInfoForKey(key) || {};\n  return {\n    isSet: keyInfo.value !== undefined,\n    value: keyInfo.value,\n    operator: keyInfo.operator || null\n  };\n}\n\nvar AutoValueRunner =\n/*#__PURE__*/\nfunction () {\n  function AutoValueRunner(options) {\n    _classCallCheck(this, AutoValueRunner);\n\n    this.options = options;\n    this.doneKeys = [];\n  }\n\n  _createClass(AutoValueRunner, [{\n    key: \"runForPosition\",\n    value: function runForPosition(_ref) {\n      var affectedKey = _ref.key,\n          operator = _ref.operator,\n          position = _ref.position,\n          value = _ref.value;\n      var _this$options = this.options,\n          closestSubschemaFieldName = _this$options.closestSubschemaFieldName,\n          extendedAutoValueContext = _this$options.extendedAutoValueContext,\n          func = _this$options.func,\n          isModifier = _this$options.isModifier,\n          isUpsert = _this$options.isUpsert,\n          mongoObject = _this$options.mongoObject; // If already called for this key, skip it\n\n      if (this.doneKeys.includes(affectedKey)) return;\n      var fieldParentName = (0, _utility.getParentOfKey)(affectedKey, true);\n      var parentFieldInfo = getFieldInfo(mongoObject, fieldParentName.slice(0, -1));\n      var doUnset = false;\n\n      if (Array.isArray(parentFieldInfo.value)) {\n        if (isNaN(affectedKey.split('.').slice(-1).pop())) {\n          // parent is an array, but the key to be set is not an integer (see issue #80)\n          return;\n        }\n      }\n\n      var autoValue = func.call(_objectSpread({\n        closestSubschemaFieldName: closestSubschemaFieldName.length ? closestSubschemaFieldName : null,\n        field: function field(fName) {\n          return getFieldInfo(mongoObject, closestSubschemaFieldName + fName);\n        },\n        isModifier: isModifier,\n        isUpsert: isUpsert,\n        isSet: value !== undefined,\n        key: affectedKey,\n        operator: operator,\n        parentField: function parentField() {\n          return parentFieldInfo;\n        },\n        siblingField: function siblingField(fName) {\n          return getFieldInfo(mongoObject, fieldParentName + fName);\n        },\n        unset: function unset() {\n          doUnset = true;\n        },\n        value: value\n      }, extendedAutoValueContext || {}), mongoObject.getObject()); // Update tracking of which keys we've run autovalue for\n\n      this.doneKeys.push(affectedKey);\n      if (doUnset && position) mongoObject.removeValueForPosition(position);\n      if (autoValue === undefined) return; // If the user's auto value is of the pseudo-modifier format, parse it\n      // into operator and value.\n\n      if (isModifier) {\n        var op;\n        var newValue;\n\n        if (autoValue && _typeof(autoValue) === 'object') {\n          var avOperator = Object.keys(autoValue).find(function (avProp) {\n            return avProp.substring(0, 1) === '$';\n          });\n\n          if (avOperator) {\n            op = avOperator;\n            newValue = autoValue[avOperator];\n          }\n        } // Add $set for updates and upserts if necessary. Keep this\n        // above the \"if (op)\" block below since we might change op\n        // in this line.\n\n\n        if (!op && position.slice(0, 1) !== '$') {\n          op = '$set';\n          newValue = autoValue;\n        }\n\n        if (op) {\n          // Update/change value\n          mongoObject.removeValueForPosition(position);\n          mongoObject.setValueForPosition(\"\".concat(op, \"[\").concat(affectedKey, \"]\"), (0, _clone.default)(newValue));\n          return;\n        }\n      } // Update/change value. Cloning is necessary in case it's an object, because\n      // if we later set some keys within it, they'd be set on the original object, too.\n\n\n      mongoObject.setValueForPosition(position, (0, _clone.default)(autoValue));\n    }\n  }]);\n\n  return AutoValueRunner;\n}();\n\nexports.default = AutoValueRunner;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}