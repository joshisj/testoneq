{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mongoObject = _interopRequireDefault(require(\"mongo-object\"));\n\nvar _doValidation = _interopRequireDefault(require(\"./doValidation\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar ValidationContext = /*#__PURE__*/function () {\n  function ValidationContext(ss) {\n    var _this = this;\n\n    _classCallCheck(this, ValidationContext);\n\n    this._simpleSchema = ss;\n    this._schema = ss.schema();\n    this._schemaKeys = Object.keys(this._schema);\n    this._validationErrors = []; // Set up validation dependencies\n\n    this._deps = {};\n    var tracker = ss._constructorOptions.tracker;\n\n    if (tracker) {\n      this._depsAny = new tracker.Dependency();\n\n      this._schemaKeys.forEach(function (key) {\n        _this._deps[key] = new tracker.Dependency();\n      });\n    }\n  }\n\n  _createClass(ValidationContext, [{\n    key: \"_markKeyChanged\",\n    value: function _markKeyChanged(key) {\n      var genericKey = _mongoObject.default.makeKeyGeneric(key);\n\n      if (Object.prototype.hasOwnProperty.call(this._deps, genericKey)) this._deps[genericKey].changed();\n    }\n  }, {\n    key: \"_markKeysChanged\",\n    value: function _markKeysChanged(keys) {\n      var _this2 = this;\n\n      if (!keys || !Array.isArray(keys) || !keys.length) return;\n      keys.forEach(function (key) {\n        return _this2._markKeyChanged(key);\n      });\n      this._depsAny && this._depsAny.changed();\n    }\n  }, {\n    key: \"setValidationErrors\",\n    value: function setValidationErrors(errors) {\n      var previousValidationErrors = this._validationErrors.map(function (o) {\n        return o.name;\n      });\n\n      var newValidationErrors = errors.map(function (o) {\n        return o.name;\n      });\n      this._validationErrors = errors; // Mark all previous plus all new as changed\n\n      var changedKeys = previousValidationErrors.concat(newValidationErrors);\n\n      this._markKeysChanged(changedKeys);\n    }\n  }, {\n    key: \"addValidationErrors\",\n    value: function addValidationErrors(errors) {\n      var _this3 = this;\n\n      var newValidationErrors = errors.map(function (o) {\n        return o.name;\n      });\n      errors.forEach(function (error) {\n        return _this3._validationErrors.push(error);\n      }); // Mark all new as changed\n\n      this._markKeysChanged(newValidationErrors);\n    } // Reset the validationErrors array\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setValidationErrors([]);\n    }\n  }, {\n    key: \"getErrorForKey\",\n    value: function getErrorForKey(key) {\n      var genericKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _mongoObject.default.makeKeyGeneric(key);\n      var errors = this._validationErrors;\n      var errorForKey = errors.find(function (error) {\n        return error.name === key;\n      });\n      if (errorForKey) return errorForKey;\n      return errors.find(function (error) {\n        return error.name === genericKey;\n      });\n    }\n  }, {\n    key: \"_keyIsInvalid\",\n    value: function _keyIsInvalid(key, genericKey) {\n      return !!this.getErrorForKey(key, genericKey);\n    } // Like the internal one, but with deps\n\n  }, {\n    key: \"keyIsInvalid\",\n    value: function keyIsInvalid(key) {\n      var genericKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _mongoObject.default.makeKeyGeneric(key);\n      if (Object.prototype.hasOwnProperty.call(this._deps, genericKey)) this._deps[genericKey].depend();\n      return this._keyIsInvalid(key, genericKey);\n    }\n  }, {\n    key: \"keyErrorMessage\",\n    value: function keyErrorMessage(key) {\n      var genericKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _mongoObject.default.makeKeyGeneric(key);\n      if (Object.prototype.hasOwnProperty.call(this._deps, genericKey)) this._deps[genericKey].depend();\n      var errorObj = this.getErrorForKey(key, genericKey);\n      if (!errorObj) return '';\n      return this._simpleSchema.messageForError(errorObj);\n    }\n    /**\n     * Validates the object against the simple schema and sets a reactive array of error objects\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(obj) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$extendedCustomCo = _ref.extendedCustomContext,\n          extendedCustomContext = _ref$extendedCustomCo === void 0 ? {} : _ref$extendedCustomCo,\n          _ref$ignore = _ref.ignore,\n          ignoreTypes = _ref$ignore === void 0 ? [] : _ref$ignore,\n          keysToValidate = _ref.keys,\n          _ref$modifier = _ref.modifier,\n          isModifier = _ref$modifier === void 0 ? false : _ref$modifier,\n          mongoObject = _ref.mongoObject,\n          _ref$upsert = _ref.upsert,\n          isUpsert = _ref$upsert === void 0 ? false : _ref$upsert;\n\n      var validationErrors = (0, _doValidation.default)({\n        extendedCustomContext: extendedCustomContext,\n        ignoreTypes: ignoreTypes,\n        isModifier: isModifier,\n        isUpsert: isUpsert,\n        keysToValidate: keysToValidate,\n        mongoObject: mongoObject,\n        obj: obj,\n        schema: this._simpleSchema,\n        validationContext: this\n      });\n\n      if (keysToValidate) {\n        // We have only revalidated the listed keys, so if there\n        // are any other existing errors that are NOT in the keys list,\n        // we should keep these errors.\n\n        /* eslint-disable no-restricted-syntax */\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          var _loop = function _loop() {\n            var error = _step.value;\n            var wasValidated = keysToValidate.some(function (key) {\n              return key === error.name || error.name.startsWith(\"\".concat(key, \".\"));\n            });\n            if (!wasValidated) validationErrors.push(error);\n          };\n\n          for (var _iterator = this._validationErrors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            _loop();\n          }\n          /* eslint-enable no-restricted-syntax */\n\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      this.setValidationErrors(validationErrors); // Return true if it was valid; otherwise, return false\n\n      return !validationErrors.length;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      this._depsAny && this._depsAny.depend();\n      return this._validationErrors.length === 0;\n    }\n  }, {\n    key: \"validationErrors\",\n    value: function validationErrors() {\n      this._depsAny && this._depsAny.depend();\n      return this._validationErrors;\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      var _this$_simpleSchema;\n\n      return (_this$_simpleSchema = this._simpleSchema).clean.apply(_this$_simpleSchema, arguments);\n    }\n  }]);\n\n  return ValidationContext;\n}();\n\nexports.default = ValidationContext;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/oneq-account/prod/node_modules/simpl-schema/dist/ValidationContext.js"],"names":["Object","defineProperty","exports","value","default","_mongoObject","_interopRequireDefault","require","_doValidation","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","ValidationContext","ss","_this","_simpleSchema","_schema","schema","_schemaKeys","keys","_validationErrors","_deps","tracker","_constructorOptions","_depsAny","Dependency","forEach","_markKeyChanged","genericKey","makeKeyGeneric","hasOwnProperty","call","changed","_markKeysChanged","_this2","Array","isArray","setValidationErrors","errors","previousValidationErrors","map","o","name","newValidationErrors","changedKeys","concat","addValidationErrors","_this3","error","push","reset","getErrorForKey","arguments","undefined","errorForKey","find","_keyIsInvalid","keyIsInvalid","depend","keyErrorMessage","errorObj","messageForError","validate","_ref","_ref$extendedCustomCo","extendedCustomContext","_ref$ignore","ignore","ignoreTypes","keysToValidate","_ref$modifier","modifier","isModifier","mongoObject","_ref$upsert","upsert","isUpsert","validationErrors","validationContext","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_loop","_step","wasValidated","some","startsWith","_iterator","Symbol","iterator","next","done","err","return","isValid","clean","_this$_simpleSchema","apply","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mongoObject = _interopRequireDefault(require(\"mongo-object\"));\n\nvar _doValidation = _interopRequireDefault(require(\"./doValidation\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ValidationContext =\n/*#__PURE__*/\nfunction () {\n  function ValidationContext(ss) {\n    var _this = this;\n\n    _classCallCheck(this, ValidationContext);\n\n    this._simpleSchema = ss;\n    this._schema = ss.schema();\n    this._schemaKeys = Object.keys(this._schema);\n    this._validationErrors = []; // Set up validation dependencies\n\n    this._deps = {};\n    var tracker = ss._constructorOptions.tracker;\n\n    if (tracker) {\n      this._depsAny = new tracker.Dependency();\n\n      this._schemaKeys.forEach(function (key) {\n        _this._deps[key] = new tracker.Dependency();\n      });\n    }\n  }\n\n  _createClass(ValidationContext, [{\n    key: \"_markKeyChanged\",\n    value: function _markKeyChanged(key) {\n      var genericKey = _mongoObject.default.makeKeyGeneric(key);\n\n      if (Object.prototype.hasOwnProperty.call(this._deps, genericKey)) this._deps[genericKey].changed();\n    }\n  }, {\n    key: \"_markKeysChanged\",\n    value: function _markKeysChanged(keys) {\n      var _this2 = this;\n\n      if (!keys || !Array.isArray(keys) || !keys.length) return;\n      keys.forEach(function (key) {\n        return _this2._markKeyChanged(key);\n      });\n      this._depsAny && this._depsAny.changed();\n    }\n  }, {\n    key: \"setValidationErrors\",\n    value: function setValidationErrors(errors) {\n      var previousValidationErrors = this._validationErrors.map(function (o) {\n        return o.name;\n      });\n\n      var newValidationErrors = errors.map(function (o) {\n        return o.name;\n      });\n      this._validationErrors = errors; // Mark all previous plus all new as changed\n\n      var changedKeys = previousValidationErrors.concat(newValidationErrors);\n\n      this._markKeysChanged(changedKeys);\n    }\n  }, {\n    key: \"addValidationErrors\",\n    value: function addValidationErrors(errors) {\n      var _this3 = this;\n\n      var newValidationErrors = errors.map(function (o) {\n        return o.name;\n      });\n      errors.forEach(function (error) {\n        return _this3._validationErrors.push(error);\n      }); // Mark all new as changed\n\n      this._markKeysChanged(newValidationErrors);\n    } // Reset the validationErrors array\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setValidationErrors([]);\n    }\n  }, {\n    key: \"getErrorForKey\",\n    value: function getErrorForKey(key) {\n      var genericKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _mongoObject.default.makeKeyGeneric(key);\n      var errors = this._validationErrors;\n      var errorForKey = errors.find(function (error) {\n        return error.name === key;\n      });\n      if (errorForKey) return errorForKey;\n      return errors.find(function (error) {\n        return error.name === genericKey;\n      });\n    }\n  }, {\n    key: \"_keyIsInvalid\",\n    value: function _keyIsInvalid(key, genericKey) {\n      return !!this.getErrorForKey(key, genericKey);\n    } // Like the internal one, but with deps\n\n  }, {\n    key: \"keyIsInvalid\",\n    value: function keyIsInvalid(key) {\n      var genericKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _mongoObject.default.makeKeyGeneric(key);\n      if (Object.prototype.hasOwnProperty.call(this._deps, genericKey)) this._deps[genericKey].depend();\n      return this._keyIsInvalid(key, genericKey);\n    }\n  }, {\n    key: \"keyErrorMessage\",\n    value: function keyErrorMessage(key) {\n      var genericKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _mongoObject.default.makeKeyGeneric(key);\n      if (Object.prototype.hasOwnProperty.call(this._deps, genericKey)) this._deps[genericKey].depend();\n      var errorObj = this.getErrorForKey(key, genericKey);\n      if (!errorObj) return '';\n      return this._simpleSchema.messageForError(errorObj);\n    }\n    /**\n     * Validates the object against the simple schema and sets a reactive array of error objects\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(obj) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$extendedCustomCo = _ref.extendedCustomContext,\n          extendedCustomContext = _ref$extendedCustomCo === void 0 ? {} : _ref$extendedCustomCo,\n          _ref$ignore = _ref.ignore,\n          ignoreTypes = _ref$ignore === void 0 ? [] : _ref$ignore,\n          keysToValidate = _ref.keys,\n          _ref$modifier = _ref.modifier,\n          isModifier = _ref$modifier === void 0 ? false : _ref$modifier,\n          mongoObject = _ref.mongoObject,\n          _ref$upsert = _ref.upsert,\n          isUpsert = _ref$upsert === void 0 ? false : _ref$upsert;\n\n      var validationErrors = (0, _doValidation.default)({\n        extendedCustomContext: extendedCustomContext,\n        ignoreTypes: ignoreTypes,\n        isModifier: isModifier,\n        isUpsert: isUpsert,\n        keysToValidate: keysToValidate,\n        mongoObject: mongoObject,\n        obj: obj,\n        schema: this._simpleSchema,\n        validationContext: this\n      });\n\n      if (keysToValidate) {\n        // We have only revalidated the listed keys, so if there\n        // are any other existing errors that are NOT in the keys list,\n        // we should keep these errors.\n\n        /* eslint-disable no-restricted-syntax */\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          var _loop = function _loop() {\n            var error = _step.value;\n            var wasValidated = keysToValidate.some(function (key) {\n              return key === error.name || error.name.startsWith(\"\".concat(key, \".\"));\n            });\n            if (!wasValidated) validationErrors.push(error);\n          };\n\n          for (var _iterator = this._validationErrors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            _loop();\n          }\n          /* eslint-enable no-restricted-syntax */\n\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      this.setValidationErrors(validationErrors); // Return true if it was valid; otherwise, return false\n\n      return !validationErrors.length;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      this._depsAny && this._depsAny.depend();\n      return this._validationErrors.length === 0;\n    }\n  }, {\n    key: \"validationErrors\",\n    value: function validationErrors() {\n      this._depsAny && this._depsAny.depend();\n      return this._validationErrors;\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      var _this$_simpleSchema;\n\n      return (_this$_simpleSchema = this._simpleSchema).clean.apply(_this$_simpleSchema, arguments);\n    }\n  }]);\n\n  return ValidationContext;\n}();\n\nexports.default = ValidationContext;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}