{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n/**\n * We have relatively simple deep merging requirements in this package.\n * We are only ever merging messages config, so we know the structure,\n * we know there are no arrays, and we know there are no constructors\n * or weirdly defined properties.\n *\n * Thus, we can write a very simplistic deep merge function to avoid\n * pulling in a large dependency.\n */\n\nfunction merge(destination) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    Object.keys(source).forEach(function (prop) {\n      if (prop === '__proto__') return; // protect against prototype pollution\n\n      if (source[prop] && source[prop].constructor && source[prop].constructor === Object) {\n        if (!destination[prop] || !destination[prop].constructor || destination[prop].constructor !== Object) {\n          destination[prop] = {};\n        }\n\n        merge(destination[prop], source[prop]);\n      } else {\n        destination[prop] = source[prop];\n      }\n    });\n  });\n  return destination;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/secondary/node_modules/simpl-schema/dist/utility/merge.js"],"names":["Object","defineProperty","exports","value","default","merge","destination","_len","arguments","length","sources","Array","_key","forEach","source","keys","prop","constructor","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,KAAlB;AAEA;;;;;;;;;;AASA,SAASA,KAAT,CAAeC,WAAf,EAA4B;AAC1B,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,OAAO,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAAvC,EAA2EK,IAAI,GAAG,CAAvF,EAA0FA,IAAI,GAAGL,IAAjG,EAAuGK,IAAI,EAA3G,EAA+G;AAC7GF,IAAAA,OAAO,CAACE,IAAI,GAAG,CAAR,CAAP,GAAoBJ,SAAS,CAACI,IAAD,CAA7B;AACD;;AAEDF,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAChCd,IAAAA,MAAM,CAACe,IAAP,CAAYD,MAAZ,EAAoBD,OAApB,CAA4B,UAAUG,IAAV,EAAgB;AAC1C,UAAIA,IAAI,KAAK,WAAb,EAA0B,OADgB,CACR;;AAElC,UAAIF,MAAM,CAACE,IAAD,CAAN,IAAgBF,MAAM,CAACE,IAAD,CAAN,CAAaC,WAA7B,IAA4CH,MAAM,CAACE,IAAD,CAAN,CAAaC,WAAb,KAA6BjB,MAA7E,EAAqF;AACnF,YAAI,CAACM,WAAW,CAACU,IAAD,CAAZ,IAAsB,CAACV,WAAW,CAACU,IAAD,CAAX,CAAkBC,WAAzC,IAAwDX,WAAW,CAACU,IAAD,CAAX,CAAkBC,WAAlB,KAAkCjB,MAA9F,EAAsG;AACpGM,UAAAA,WAAW,CAACU,IAAD,CAAX,GAAoB,EAApB;AACD;;AAEDX,QAAAA,KAAK,CAACC,WAAW,CAACU,IAAD,CAAZ,EAAoBF,MAAM,CAACE,IAAD,CAA1B,CAAL;AACD,OAND,MAMO;AACLV,QAAAA,WAAW,CAACU,IAAD,CAAX,GAAoBF,MAAM,CAACE,IAAD,CAA1B;AACD;AACF,KAZD;AAaD,GAdD;AAeA,SAAOV,WAAP;AACD;;AAEDY,MAAM,CAAChB,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAc,MAAM,CAAChB,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\n/**\n * We have relatively simple deep merging requirements in this package.\n * We are only ever merging messages config, so we know the structure,\n * we know there are no arrays, and we know there are no constructors\n * or weirdly defined properties.\n *\n * Thus, we can write a very simplistic deep merge function to avoid\n * pulling in a large dependency.\n */\nfunction merge(destination) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    Object.keys(source).forEach(function (prop) {\n      if (prop === '__proto__') return; // protect against prototype pollution\n\n      if (source[prop] && source[prop].constructor && source[prop].constructor === Object) {\n        if (!destination[prop] || !destination[prop].constructor || destination[prop].constructor !== Object) {\n          destination[prop] = {};\n        }\n\n        merge(destination[prop], source[prop]);\n      } else {\n        destination[prop] = source[prop];\n      }\n    });\n  });\n  return destination;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}