{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regExp = _interopRequireDefault(require(\"./regExp\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar regExpMessages = [{\n  exp: _regExp.default.Email,\n  msg: 'must be a valid email address'\n}, {\n  exp: _regExp.default.EmailWithTLD,\n  msg: 'must be a valid email address'\n}, {\n  exp: _regExp.default.Domain,\n  msg: 'must be a valid domain'\n}, {\n  exp: _regExp.default.WeakDomain,\n  msg: 'must be a valid domain'\n}, {\n  exp: _regExp.default.IP,\n  msg: 'must be a valid IPv4 or IPv6 address'\n}, {\n  exp: _regExp.default.IPv4,\n  msg: 'must be a valid IPv4 address'\n}, {\n  exp: _regExp.default.IPv6,\n  msg: 'must be a valid IPv6 address'\n}, {\n  exp: _regExp.default.Url,\n  msg: 'must be a valid URL'\n}, {\n  exp: _regExp.default.Id,\n  msg: 'must be a valid alphanumeric ID'\n}, {\n  exp: _regExp.default.ZipCode,\n  msg: 'must be a valid ZIP code'\n}, {\n  exp: _regExp.default.Phone,\n  msg: 'must be a valid phone number'\n}];\nvar defaultMessages = {\n  initialLanguage: 'en',\n  messages: {\n    en: {\n      required: '{{{label}}} is required',\n      minString: '{{{label}}} must be at least {{min}} characters',\n      maxString: '{{{label}}} cannot exceed {{max}} characters',\n      minNumber: '{{{label}}} must be at least {{min}}',\n      maxNumber: '{{{label}}} cannot exceed {{max}}',\n      minNumberExclusive: '{{{label}}} must be greater than {{min}}',\n      maxNumberExclusive: '{{{label}}} must be less than {{max}}',\n      minDate: '{{{label}}} must be on or after {{min}}',\n      maxDate: '{{{label}}} cannot be after {{max}}',\n      badDate: '{{{label}}} is not a valid date',\n      minCount: 'You must specify at least {{minCount}} values',\n      maxCount: 'You cannot specify more than {{maxCount}} values',\n      noDecimal: '{{{label}}} must be an integer',\n      notAllowed: '{{{value}}} is not an allowed value',\n      expectedType: '{{{label}}} must be of type {{dataType}}',\n      regEx: function regEx(_ref) {\n        var label = _ref.label,\n            regExp = _ref.regExp; // See if there's one where exp matches this expression\n\n        var msgObj;\n\n        if (regExp) {\n          msgObj = regExpMessages.find(function (o) {\n            return o.exp && o.exp.toString() === regExp;\n          });\n        }\n\n        var regExpMessage = msgObj ? msgObj.msg : 'failed regular expression validation';\n        return \"\".concat(label, \" \").concat(regExpMessage);\n      },\n      keyNotInSchema: '{{name}} is not allowed by the schema'\n    }\n  }\n};\nvar _default = defaultMessages;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/myaccount/scratch/react-amplify/node_modules/simpl-schema/dist/defaultMessages.js"],"names":["Object","defineProperty","exports","value","default","_regExp","_interopRequireDefault","require","obj","__esModule","regExpMessages","exp","Email","msg","EmailWithTLD","Domain","WeakDomain","IP","IPv4","IPv6","Url","Id","ZipCode","Phone","defaultMessages","initialLanguage","messages","en","required","minString","maxString","minNumber","maxNumber","minNumberExclusive","maxNumberExclusive","minDate","maxDate","badDate","minCount","maxCount","noDecimal","notAllowed","expectedType","regEx","_ref","label","regExp","msgObj","find","o","toString","regExpMessage","concat","keyNotInSchema","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regExp = _interopRequireDefault(require(\"./regExp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar regExpMessages = [{\n  exp: _regExp.default.Email,\n  msg: 'must be a valid email address'\n}, {\n  exp: _regExp.default.EmailWithTLD,\n  msg: 'must be a valid email address'\n}, {\n  exp: _regExp.default.Domain,\n  msg: 'must be a valid domain'\n}, {\n  exp: _regExp.default.WeakDomain,\n  msg: 'must be a valid domain'\n}, {\n  exp: _regExp.default.IP,\n  msg: 'must be a valid IPv4 or IPv6 address'\n}, {\n  exp: _regExp.default.IPv4,\n  msg: 'must be a valid IPv4 address'\n}, {\n  exp: _regExp.default.IPv6,\n  msg: 'must be a valid IPv6 address'\n}, {\n  exp: _regExp.default.Url,\n  msg: 'must be a valid URL'\n}, {\n  exp: _regExp.default.Id,\n  msg: 'must be a valid alphanumeric ID'\n}, {\n  exp: _regExp.default.ZipCode,\n  msg: 'must be a valid ZIP code'\n}, {\n  exp: _regExp.default.Phone,\n  msg: 'must be a valid phone number'\n}];\nvar defaultMessages = {\n  initialLanguage: 'en',\n  messages: {\n    en: {\n      required: '{{{label}}} is required',\n      minString: '{{{label}}} must be at least {{min}} characters',\n      maxString: '{{{label}}} cannot exceed {{max}} characters',\n      minNumber: '{{{label}}} must be at least {{min}}',\n      maxNumber: '{{{label}}} cannot exceed {{max}}',\n      minNumberExclusive: '{{{label}}} must be greater than {{min}}',\n      maxNumberExclusive: '{{{label}}} must be less than {{max}}',\n      minDate: '{{{label}}} must be on or after {{min}}',\n      maxDate: '{{{label}}} cannot be after {{max}}',\n      badDate: '{{{label}}} is not a valid date',\n      minCount: 'You must specify at least {{minCount}} values',\n      maxCount: 'You cannot specify more than {{maxCount}} values',\n      noDecimal: '{{{label}}} must be an integer',\n      notAllowed: '{{{value}}} is not an allowed value',\n      expectedType: '{{{label}}} must be of type {{dataType}}',\n      regEx: function regEx(_ref) {\n        var label = _ref.label,\n            regExp = _ref.regExp;\n        // See if there's one where exp matches this expression\n        var msgObj;\n\n        if (regExp) {\n          msgObj = regExpMessages.find(function (o) {\n            return o.exp && o.exp.toString() === regExp;\n          });\n        }\n\n        var regExpMessage = msgObj ? msgObj.msg : 'failed regular expression validation';\n        return \"\".concat(label, \" \").concat(regExpMessage);\n      },\n      keyNotInSchema: '{{name}} is not allowed by the schema'\n    }\n  }\n};\nvar _default = defaultMessages;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}