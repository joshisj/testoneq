{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { connectField, filterDOMProps } from 'uniforms';\n\nconst noneIfNaN = x => isNaN(x) ? undefined : x;\n\nconst parse = (decimal, x) => noneIfNaN((decimal ? parseFloat : parseInt)(x));\n\nconst Num_ = _a => {\n  var {\n    className,\n    decimal,\n    disabled,\n    error,\n    errorMessage,\n    icon,\n    iconLeft,\n    iconProps,\n    id,\n    inputRef,\n    label,\n    max,\n    min,\n    name,\n    onChange,\n    placeholder,\n    required,\n    showInlineError,\n    step,\n    value,\n    wrapClassName\n  } = _a,\n      props = __rest(_a, [\"className\", \"decimal\", \"disabled\", \"error\", \"errorMessage\", \"icon\", \"iconLeft\", \"iconProps\", \"id\", \"inputRef\", \"label\", \"max\", \"min\", \"name\", \"onChange\", \"placeholder\", \"required\", \"showInlineError\", \"step\", \"value\", \"wrapClassName\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: classnames(className, {\n      disabled,\n      error,\n      required\n    }, 'field')\n  }, filterDOMProps(props)), label && React.createElement(\"label\", {\n    htmlFor: id\n  }, label), React.createElement(\"div\", {\n    className: classnames('ui', wrapClassName, {\n      left: iconLeft,\n      icon: icon || iconLeft\n    }, 'input')\n  }, React.createElement(\"input\", {\n    disabled: disabled,\n    id: id,\n    max: max,\n    min: min,\n    name: name,\n    onChange: onChange,\n    placeholder: placeholder,\n    ref: inputRef,\n    step: step || (decimal ? 0.01 : 1),\n    type: \"number\",\n    value: value\n  }), (icon || iconLeft) && React.createElement(\"i\", Object.assign({\n    className: `${icon || iconLeft} icon`\n  }, iconProps))), !!(error && showInlineError) && React.createElement(\"div\", {\n    className: \"ui red basic pointing label\"\n  }, errorMessage));\n};\n\nlet Num; // istanbul ignore next\n\nif (parseInt(React.version, 10) < 16) {\n  Num = class Num extends Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        value: '' + this.props.value\n      };\n\n      this.onChange = event => {\n        const value = event.target.value.replace(/[^\\d.,-]/g, '');\n        this.setState({\n          value\n        });\n        this.props.onChange(parse(this.props.decimal, value));\n      };\n    }\n\n    componentWillReceiveProps({\n      decimal,\n      value\n    }) {\n      if (parse(decimal, value) !== parse(decimal, this.state.value.replace(/[.,]+$/, ''))) {\n        this.setState({\n          value: value === undefined || value === '' ? '' : '' + value\n        });\n      }\n    }\n\n    render() {\n      return Num_(Object.assign(Object.assign({}, this.props), {\n        onChange: this.onChange,\n        value: this.state.value\n      }));\n    }\n\n  };\n} else {\n  Num = props => Num_(Object.assign(Object.assign({}, props), {\n    onChange(event) {\n      props.onChange(parse(props.decimal, event.target.value));\n    }\n\n  }));\n}\n\nexport default connectField(Num);","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/oneq-account/oneq-prod/node_modules/uniforms-semantic/es6/NumField.js"],"names":["__rest","React","Component","classnames","connectField","filterDOMProps","noneIfNaN","x","isNaN","undefined","parse","decimal","parseFloat","parseInt","Num_","_a","className","disabled","error","errorMessage","icon","iconLeft","iconProps","id","inputRef","label","max","min","name","onChange","placeholder","required","showInlineError","step","value","wrapClassName","props","createElement","Object","assign","htmlFor","left","ref","type","Num","version","constructor","arguments","state","event","target","replace","setState","componentWillReceiveProps","render"],"mappings":"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","sourcesContent":["import { __rest } from \"tslib\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { connectField, filterDOMProps } from 'uniforms';\nconst noneIfNaN = x => (isNaN(x) ? undefined : x);\nconst parse = (decimal, x) => noneIfNaN((decimal ? parseFloat : parseInt)(x));\nconst Num_ = (_a) => {\n    var { className, decimal, disabled, error, errorMessage, icon, iconLeft, iconProps, id, inputRef, label, max, min, name, onChange, placeholder, required, showInlineError, step, value, wrapClassName } = _a, props = __rest(_a, [\"className\", \"decimal\", \"disabled\", \"error\", \"errorMessage\", \"icon\", \"iconLeft\", \"iconProps\", \"id\", \"inputRef\", \"label\", \"max\", \"min\", \"name\", \"onChange\", \"placeholder\", \"required\", \"showInlineError\", \"step\", \"value\", \"wrapClassName\"]);\n    return (React.createElement(\"div\", Object.assign({ className: classnames(className, { disabled, error, required }, 'field') }, filterDOMProps(props)),\n        label && React.createElement(\"label\", { htmlFor: id }, label),\n        React.createElement(\"div\", { className: classnames('ui', wrapClassName, { left: iconLeft, icon: icon || iconLeft }, 'input') },\n            React.createElement(\"input\", { disabled: disabled, id: id, max: max, min: min, name: name, onChange: onChange, placeholder: placeholder, ref: inputRef, step: step || (decimal ? 0.01 : 1), type: \"number\", value: value }),\n            (icon || iconLeft) && (React.createElement(\"i\", Object.assign({ className: `${icon || iconLeft} icon` }, iconProps)))),\n        !!(error && showInlineError) && (React.createElement(\"div\", { className: \"ui red basic pointing label\" }, errorMessage))));\n};\nlet Num;\n// istanbul ignore next\nif (parseInt(React.version, 10) < 16) {\n    Num = class Num extends Component {\n        constructor() {\n            super(...arguments);\n            this.state = { value: '' + this.props.value };\n            this.onChange = event => {\n                const value = event.target.value.replace(/[^\\d.,-]/g, '');\n                this.setState({ value });\n                this.props.onChange(parse(this.props.decimal, value));\n            };\n        }\n        componentWillReceiveProps({ decimal, value }) {\n            if (parse(decimal, value) !==\n                parse(decimal, this.state.value.replace(/[.,]+$/, ''))) {\n                this.setState({\n                    value: value === undefined || value === '' ? '' : '' + value,\n                });\n            }\n        }\n        render() {\n            return Num_(Object.assign(Object.assign({}, this.props), { onChange: this.onChange, value: this.state.value }));\n        }\n    };\n}\nelse {\n    Num = props => Num_(Object.assign(Object.assign({}, props), { onChange(event) {\n            props.onChange(parse(props.decimal, event.target.value));\n        } }));\n}\nexport default connectField(Num);\n"]},"metadata":{},"sourceType":"module"}