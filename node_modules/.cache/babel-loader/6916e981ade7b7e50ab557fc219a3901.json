{"ast":null,"code":"var _jsxFileName = \"/Users/joshisj/IdeaProjects/myaccount/scratch/src/App.js\";\nimport React, { Component } from \"react\";\nimport { withAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport RequestForm from './saRequestForm';\nconst listTodos = `query listTodos {\n  listTodos{\n    items{\n    id\n    accountLink\n    accountName\n    activityRequester\n    accountOpportunity\n    activityTitle\n    activityType\n    activityTopic\n    activityDomain\n    activityComplexity\n    activityDetails\n    activityFromDate\n    activityToDate\n    activityLocation\n    activityInteractionType\n    activityLanguage\n    activityAM\n    activityrequestedSA\n    activityPriority\n    activityRegion\n    activitySubregion\n    activityTerritory\n    activityWatchers\n    activitySubtopic\n    }\n  }\n}`;\nconst addTodo = `mutation createTodo($name:String! $description:String! $activityRequester:String! $activitySubtopic:String! $activityWatchers:String! $activityTerritory:String! $activitySubregion:String! $activityRegion:String! $activityPriority:String! $activityrequestedSA:String! $activityAM:String! $activityLanguage:String! $activityInteractionType:String! $activityLocation:String! $activityToDate:String! $activityFromDate:String! $activityDetails:String! $accountOpportunity:String! $activityTitle:String! $activityType:String! $activityTopic:String! $activityDomain:String! $activityComplexity:String!) {\n  createTodo(input:{\n    accountLink:$name\n    accountName:$description\n    activityRequester:$activityRequester\n    accountOpportunity:$accountOpportunity\n    activityTitle:$activityTitle\n    activityType:$activityType\n    activityTopic:$activityTopic\n    activityDomain:$activityDomain\n    activityComplexity:$activityComplexity\n    activityDetails:$activityDetails\n    activityFromDate:$activityFromDate\n    activityToDate:$activityToDate\n    activityLocation:$activityLocation\n    activityInteractionType:$activityInteractionType\n    activityLanguage:$activityLanguage\n    activityAM:$activityAM\n    activityrequestedSA:$activityrequestedSA\n    activityPriority:$activityPriority\n    activityRegion:$activityRegion\n    activitySubregion:$activitySubregion\n    activityTerritory:$activityTerritory\n    activityWatchers:$activityWatchers\n    activitySubtopic:$activitySubtopic\n  }){\n    id\n    accountLink\n    accountName\n    activityRequester\n    accountOpportunity\n    activityTitle\n    activityType\n    activityTopic\n    activityDomain\n    activityComplexity\n    activityDetails\n    activityFromDate\n    activityToDate\n    activityLocation\n    activityInteractionType\n    activityLanguage\n    activityAM\n    activityrequestedSA\n    activityPriority\n    activityRegion\n    activitySubregion\n    activityTerritory\n    activityWatchers\n    activitySubtopic\n  }\n}`;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.todoMutation = async () => {\n      const todoDetails = {\n        name: \"Party!\",\n        description: \"Amplify CLI!\",\n        activityRequester: \"ac\",\n        accountOpportunity: \"ac\",\n        activityTitle: \"ac\",\n        activityType: \"ac\",\n        activityTopic: \"ac\",\n        activityDomain: \"ac\",\n        activityComplexity: \"ac\",\n        activityDetails: \"ac\",\n        activityFromDate: \"ac\",\n        activityToDate: \"ac\",\n        activityLocation: \"ac\",\n        activityInteractionType: \"ac\",\n        activityLanguage: \"ac\",\n        activityAM: \"ac\",\n        activityrequestedSA: \"ac\",\n        activityPriority: \"ac\",\n        activityRegion: \"ac\",\n        activitySubregion: \"ac\",\n        activityTerritory: \"ac\",\n        activityWatchers: \"ac\",\n        activitySubtopic: \"ac\"\n      };\n      const newTodo = await API.graphql(graphqlOperation(addTodo, todoDetails));\n      alert(JSON.stringify(newTodo));\n    };\n\n    this.listQuery = async () => {\n      console.log(\"listing todos\");\n      const allTodos = await API.graphql(graphqlOperation(listTodos));\n      alert(JSON.stringify(allTodos));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RequestForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.listQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, \"GraphQL List Query\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.todoMutation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, \"GraphQL Todo Mutation\"));\n  }\n\n}\n\nexport default withAuthenticator(App, true);","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/myaccount/scratch/src/App.js"],"names":["React","Component","withAuthenticator","AmplifySignOut","API","graphqlOperation","RequestForm","listTodos","addTodo","App","todoMutation","todoDetails","name","description","activityRequester","accountOpportunity","activityTitle","activityType","activityTopic","activityDomain","activityComplexity","activityDetails","activityFromDate","activityToDate","activityLocation","activityInteractionType","activityLanguage","activityAM","activityrequestedSA","activityPriority","activityRegion","activitySubregion","activityTerritory","activityWatchers","activitySubtopic","newTodo","graphql","alert","JSON","stringify","listQuery","console","log","allTodos","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,uBAAlD;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,MAAMC,SAAS,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAnB;AA+BA,MAAMC,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAjB;;AAqDA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAC1BS,YAD0B,GACX,YAAY;AACzB,YAAMC,WAAW,GAAG;AAClBC,QAAAA,IAAI,EAAE,QADY;AAElBC,QAAAA,WAAW,EAAE,cAFK;AAGlBC,QAAAA,iBAAiB,EAAC,IAHA;AAIlBC,QAAAA,kBAAkB,EAAC,IAJD;AAKlBC,QAAAA,aAAa,EAAC,IALI;AAMlBC,QAAAA,YAAY,EAAC,IANK;AAOlBC,QAAAA,aAAa,EAAC,IAPI;AAQlBC,QAAAA,cAAc,EAAC,IARG;AASlBC,QAAAA,kBAAkB,EAAC,IATD;AAUlBC,QAAAA,eAAe,EAAC,IAVE;AAWlBC,QAAAA,gBAAgB,EAAC,IAXC;AAYlBC,QAAAA,cAAc,EAAC,IAZG;AAalBC,QAAAA,gBAAgB,EAAC,IAbC;AAclBC,QAAAA,uBAAuB,EAAC,IAdN;AAelBC,QAAAA,gBAAgB,EAAC,IAfC;AAgBlBC,QAAAA,UAAU,EAAC,IAhBO;AAiBlBC,QAAAA,mBAAmB,EAAC,IAjBF;AAkBlBC,QAAAA,gBAAgB,EAAC,IAlBC;AAmBlBC,QAAAA,cAAc,EAAC,IAnBG;AAoBlBC,QAAAA,iBAAiB,EAAC,IApBA;AAqBlBC,QAAAA,iBAAiB,EAAC,IArBA;AAsBlBC,QAAAA,gBAAgB,EAAC,IAtBC;AAuBlBC,QAAAA,gBAAgB,EAAC;AAvBC,OAApB;AA0BA,YAAMC,OAAO,GAAG,MAAM/B,GAAG,CAACgC,OAAJ,CAAY/B,gBAAgB,CAACG,OAAD,EAAUG,WAAV,CAA5B,CAAtB;AACA0B,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAD,CAAL;AACD,KA9ByB;;AAAA,SAgC1BK,SAhC0B,GAgCd,YAAY;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,YAAMC,QAAQ,GAAG,MAAMvC,GAAG,CAACgC,OAAJ,CAAY/B,gBAAgB,CAACE,SAAD,CAA5B,CAAvB;AACA8B,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeI,QAAf,CAAD,CAAL;AACD,KApCyB;AAAA;;AAuC1BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKJ,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,KAAK9B,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,CADF;AAOD;;AA/CyB;;AAkD5B,eAAeR,iBAAiB,CAACO,GAAD,EAAM,IAAN,CAAhC","sourcesContent":["import React, { Component } from \"react\";\n\nimport { withAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport RequestForm from './saRequestForm'\n\nconst listTodos = `query listTodos {\n  listTodos{\n    items{\n    id\n    accountLink\n    accountName\n    activityRequester\n    accountOpportunity\n    activityTitle\n    activityType\n    activityTopic\n    activityDomain\n    activityComplexity\n    activityDetails\n    activityFromDate\n    activityToDate\n    activityLocation\n    activityInteractionType\n    activityLanguage\n    activityAM\n    activityrequestedSA\n    activityPriority\n    activityRegion\n    activitySubregion\n    activityTerritory\n    activityWatchers\n    activitySubtopic\n    }\n  }\n}`;\n\nconst addTodo = `mutation createTodo($name:String! $description:String! $activityRequester:String! $activitySubtopic:String! $activityWatchers:String! $activityTerritory:String! $activitySubregion:String! $activityRegion:String! $activityPriority:String! $activityrequestedSA:String! $activityAM:String! $activityLanguage:String! $activityInteractionType:String! $activityLocation:String! $activityToDate:String! $activityFromDate:String! $activityDetails:String! $accountOpportunity:String! $activityTitle:String! $activityType:String! $activityTopic:String! $activityDomain:String! $activityComplexity:String!) {\n  createTodo(input:{\n    accountLink:$name\n    accountName:$description\n    activityRequester:$activityRequester\n    accountOpportunity:$accountOpportunity\n    activityTitle:$activityTitle\n    activityType:$activityType\n    activityTopic:$activityTopic\n    activityDomain:$activityDomain\n    activityComplexity:$activityComplexity\n    activityDetails:$activityDetails\n    activityFromDate:$activityFromDate\n    activityToDate:$activityToDate\n    activityLocation:$activityLocation\n    activityInteractionType:$activityInteractionType\n    activityLanguage:$activityLanguage\n    activityAM:$activityAM\n    activityrequestedSA:$activityrequestedSA\n    activityPriority:$activityPriority\n    activityRegion:$activityRegion\n    activitySubregion:$activitySubregion\n    activityTerritory:$activityTerritory\n    activityWatchers:$activityWatchers\n    activitySubtopic:$activitySubtopic\n  }){\n    id\n    accountLink\n    accountName\n    activityRequester\n    accountOpportunity\n    activityTitle\n    activityType\n    activityTopic\n    activityDomain\n    activityComplexity\n    activityDetails\n    activityFromDate\n    activityToDate\n    activityLocation\n    activityInteractionType\n    activityLanguage\n    activityAM\n    activityrequestedSA\n    activityPriority\n    activityRegion\n    activitySubregion\n    activityTerritory\n    activityWatchers\n    activitySubtopic\n  }\n}`;\n\nclass App extends Component {\n  todoMutation = async () => {\n    const todoDetails = {\n      name: \"Party!\",\n      description: \"Amplify CLI!\",\n      activityRequester:\"ac\",\n      accountOpportunity:\"ac\",\n      activityTitle:\"ac\",\n      activityType:\"ac\",\n      activityTopic:\"ac\",\n      activityDomain:\"ac\",\n      activityComplexity:\"ac\",\n      activityDetails:\"ac\",\n      activityFromDate:\"ac\",\n      activityToDate:\"ac\",\n      activityLocation:\"ac\",\n      activityInteractionType:\"ac\",\n      activityLanguage:\"ac\",\n      activityAM:\"ac\",\n      activityrequestedSA:\"ac\",\n      activityPriority:\"ac\",\n      activityRegion:\"ac\",\n      activitySubregion:\"ac\",\n      activityTerritory:\"ac\",\n      activityWatchers:\"ac\",\n      activitySubtopic:\"ac\"\n    };\n\n    const newTodo = await API.graphql(graphqlOperation(addTodo, todoDetails));\n    alert(JSON.stringify(newTodo));\n  };\n\n  listQuery = async () => {\n    console.log(\"listing todos\");\n    const allTodos = await API.graphql(graphqlOperation(listTodos));\n    alert(JSON.stringify(allTodos));\n  };\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <RequestForm />\n        <button onClick={this.listQuery}>GraphQL List Query</button>\n        <button onClick={this.todoMutation}>GraphQL Todo Mutation</button>\n      </div>\n    );\n  }\n}\n\nexport default withAuthenticator(App, true);"]},"metadata":{},"sourceType":"module"}