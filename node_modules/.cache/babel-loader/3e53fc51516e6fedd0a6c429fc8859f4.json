{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0; // this domain regex matches all domains that have at least one .\n// sadly IPv4 Adresses will be caught too but technically those are valid domains\n// this expression is extracted from the original RFC 5322 mail expression\n// a modification enforces that the tld consists only of characters\n\nvar rxDomain = '(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z](?:[a-z-]*[a-z])?'; // this domain regex matches everythign that could be a domain in intranet\n// that means \"localhost\" is a valid domain\n\nvar rxNameDomain = '(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?(?:\\\\.|$))+'; // strict IPv4 expression which allows 0-255 per oktett\n\nvar rxIPv4 = '(?:(?:[0-1]?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])(?:\\\\.|$)){4}'; // strict IPv6 expression which allows (and validates) all shortcuts\n\nvar rxIPv6 = '(?:(?:[\\\\dA-Fa-f]{1,4}(?::|$)){8}' // full adress\n+ '|(?=(?:[^:\\\\s]|:[^:\\\\s])*::(?:[^:\\\\s]|:[^:\\\\s])*$)' // or min/max one '::'\n+ '[\\\\dA-Fa-f]{0,4}(?:::?(?:[\\\\dA-Fa-f]{1,4}|$)){1,6})'; // and short adress\n// this allows domains (also localhost etc) and ip adresses\n\nvar rxWeakDomain = \"(?:\".concat([rxNameDomain, rxIPv4, rxIPv6].join('|'), \")\"); // unique id from the random package also used by minimongo\n// min and max are used to set length boundaries\n// set both for explicit lower and upper bounds\n// set min as integer and max to null for explicit lower bound and arbitrary upper bound\n// set none for arbitrary length\n// set only min for fixed length\n// character list: https://github.com/meteor/meteor/blob/release/0.8.0/packages/random/random.js#L88\n// string length: https://github.com/meteor/meteor/blob/release/0.8.0/packages/random/random.js#L143\n\nvar isValidBound = function isValidBound(value, lower) {\n  return !value || Number.isSafeInteger(value) && value > lower;\n};\n\nvar idOfLength = function idOfLength(min, max) {\n  if (!isValidBound(min, 0)) throw new Error(\"Expected a non-negative safe integer, got \".concat(min));\n  if (!isValidBound(max, min)) throw new Error(\"Expected a non-negative safe integer greater than 1 and greater than min, got \".concat(max));\n  var bounds;\n  if (min && max) bounds = \"\".concat(min, \",\").concat(max);else if (min && max === null) bounds = \"\".concat(min, \",\");else if (min && !max) bounds = \"\".concat(min);else if (!min && !max) bounds = '0,';else throw new Error(\"Unexpected state for min (\".concat(min, \") and max (\").concat(max, \")\"));\n  return new RegExp(\"^[23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz]{\".concat(bounds, \"}$\"));\n};\n\nvar regEx = {\n  // We use the RegExp suggested by W3C in http://www.w3.org/TR/html5/forms.html#valid-e-mail-address\n  // This is probably the same logic used by most browsers when type=email, which is our goal. It is\n  // a very permissive expression. Some apps may wish to be more strict and can write their own RegExp.\n  Email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n  // Like Email but requires the TLD (.com, etc)\n  EmailWithTLD: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  Domain: new RegExp(\"^\".concat(rxDomain, \"$\")),\n  WeakDomain: new RegExp(\"^\".concat(rxWeakDomain, \"$\")),\n  IP: new RegExp(\"^(?:\".concat(rxIPv4, \"|\").concat(rxIPv6, \")$\")),\n  IPv4: new RegExp(\"^\".concat(rxIPv4, \"$\")),\n  IPv6: new RegExp(\"^\".concat(rxIPv6, \"$\")),\n  // URL RegEx from https://gist.github.com/dperini/729294\n  // http://mathiasbynens.be/demo/url-regex\n  Url: /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i,\n  // default id is defined with exact 17 chars of length\n  Id: idOfLength(17),\n  idOfLength: idOfLength,\n  // allows for a 5 digit zip code followed by a whitespace or dash and then 4 more digits\n  // matches 11111 and 11111-1111 and 11111 1111\n  ZipCode: /^\\d{5}(?:[-\\s]\\d{4})?$/,\n  // taken from Google's libphonenumber library\n  // https://github.com/googlei18n/libphonenumber/blob/master/javascript/i18n/phonenumbers/phonenumberutil.js\n  // reference the VALID_PHONE_NUMBER_PATTERN key\n  // allows for common phone number symbols including + () and -\n  Phone: /^[0-9０-９٠-٩۰-۹]{2}$|^[+＋]*(?:[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～*]*[0-9０-９٠-٩۰-۹]){3,}[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～0-9０-９٠-٩۰-۹]*(?:;ext=([0-9０-９٠-٩۰-۹]{1,7})|[  \\t,]*(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|[,xｘ#＃~～]|int|anexo|ｉｎｔ)[:\\.．]?[  \\t,-]*([0-9０-９٠-٩۰-۹]{1,7})#?|[- ]+([0-9０-９٠-٩۰-۹]{1,5})#)?$/i // eslint-disable-line no-irregular-whitespace\n\n};\nvar _default = regEx;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/myaccount/scratch/node_modules/simpl-schema/dist/regExp.js"],"names":["Object","defineProperty","exports","value","default","rxDomain","rxNameDomain","rxIPv4","rxIPv6","rxWeakDomain","concat","join","isValidBound","lower","Number","isSafeInteger","idOfLength","min","max","Error","bounds","RegExp","regEx","Email","EmailWithTLD","Domain","WeakDomain","IP","IPv4","IPv6","Url","Id","ZipCode","Phone","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n// this domain regex matches all domains that have at least one .\n// sadly IPv4 Adresses will be caught too but technically those are valid domains\n// this expression is extracted from the original RFC 5322 mail expression\n// a modification enforces that the tld consists only of characters\nvar rxDomain = '(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z](?:[a-z-]*[a-z])?'; // this domain regex matches everythign that could be a domain in intranet\n// that means \"localhost\" is a valid domain\n\nvar rxNameDomain = '(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?(?:\\\\.|$))+'; // strict IPv4 expression which allows 0-255 per oktett\n\nvar rxIPv4 = '(?:(?:[0-1]?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])(?:\\\\.|$)){4}'; // strict IPv6 expression which allows (and validates) all shortcuts\n\nvar rxIPv6 = '(?:(?:[\\\\dA-Fa-f]{1,4}(?::|$)){8}' // full adress\n+ '|(?=(?:[^:\\\\s]|:[^:\\\\s])*::(?:[^:\\\\s]|:[^:\\\\s])*$)' // or min/max one '::'\n+ '[\\\\dA-Fa-f]{0,4}(?:::?(?:[\\\\dA-Fa-f]{1,4}|$)){1,6})'; // and short adress\n// this allows domains (also localhost etc) and ip adresses\n\nvar rxWeakDomain = \"(?:\".concat([rxNameDomain, rxIPv4, rxIPv6].join('|'), \")\"); // unique id from the random package also used by minimongo\n// min and max are used to set length boundaries\n// set both for explicit lower and upper bounds\n// set min as integer and max to null for explicit lower bound and arbitrary upper bound\n// set none for arbitrary length\n// set only min for fixed length\n// character list: https://github.com/meteor/meteor/blob/release/0.8.0/packages/random/random.js#L88\n// string length: https://github.com/meteor/meteor/blob/release/0.8.0/packages/random/random.js#L143\n\nvar isValidBound = function isValidBound(value, lower) {\n  return !value || Number.isSafeInteger(value) && value > lower;\n};\n\nvar idOfLength = function idOfLength(min, max) {\n  if (!isValidBound(min, 0)) throw new Error(\"Expected a non-negative safe integer, got \".concat(min));\n  if (!isValidBound(max, min)) throw new Error(\"Expected a non-negative safe integer greater than 1 and greater than min, got \".concat(max));\n  var bounds;\n  if (min && max) bounds = \"\".concat(min, \",\").concat(max);else if (min && max === null) bounds = \"\".concat(min, \",\");else if (min && !max) bounds = \"\".concat(min);else if (!min && !max) bounds = '0,';else throw new Error(\"Unexpected state for min (\".concat(min, \") and max (\").concat(max, \")\"));\n  return new RegExp(\"^[23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz]{\".concat(bounds, \"}$\"));\n};\n\nvar regEx = {\n  // We use the RegExp suggested by W3C in http://www.w3.org/TR/html5/forms.html#valid-e-mail-address\n  // This is probably the same logic used by most browsers when type=email, which is our goal. It is\n  // a very permissive expression. Some apps may wish to be more strict and can write their own RegExp.\n  Email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n  // Like Email but requires the TLD (.com, etc)\n  EmailWithTLD: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  Domain: new RegExp(\"^\".concat(rxDomain, \"$\")),\n  WeakDomain: new RegExp(\"^\".concat(rxWeakDomain, \"$\")),\n  IP: new RegExp(\"^(?:\".concat(rxIPv4, \"|\").concat(rxIPv6, \")$\")),\n  IPv4: new RegExp(\"^\".concat(rxIPv4, \"$\")),\n  IPv6: new RegExp(\"^\".concat(rxIPv6, \"$\")),\n  // URL RegEx from https://gist.github.com/dperini/729294\n  // http://mathiasbynens.be/demo/url-regex\n  Url: /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i,\n  // default id is defined with exact 17 chars of length\n  Id: idOfLength(17),\n  idOfLength: idOfLength,\n  // allows for a 5 digit zip code followed by a whitespace or dash and then 4 more digits\n  // matches 11111 and 11111-1111 and 11111 1111\n  ZipCode: /^\\d{5}(?:[-\\s]\\d{4})?$/,\n  // taken from Google's libphonenumber library\n  // https://github.com/googlei18n/libphonenumber/blob/master/javascript/i18n/phonenumbers/phonenumberutil.js\n  // reference the VALID_PHONE_NUMBER_PATTERN key\n  // allows for common phone number symbols including + () and -\n  Phone: /^[0-9０-９٠-٩۰-۹]{2}$|^[+＋]*(?:[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～*]*[0-9０-９٠-٩۰-۹]){3,}[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～0-9０-９٠-٩۰-۹]*(?:;ext=([0-9０-９٠-٩۰-۹]{1,7})|[  \\t,]*(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|[,xｘ#＃~～]|int|anexo|ｉｎｔ)[:\\.．]?[  \\t,-]*([0-9０-９٠-٩۰-۹]{1,7})#?|[- ]+([0-9０-９٠-٩۰-۹]{1,5})#)?$/i // eslint-disable-line no-irregular-whitespace\n\n};\nvar _default = regEx;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}