{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport { connectField, filterDOMProps, injectName, joinName } from 'uniforms';\nimport AutoField from './AutoField';\n\nconst Nest = _a => {\n  var {\n    children,\n    className,\n    disabled,\n    error,\n    errorMessage,\n    fields,\n    grouped,\n    itemProps,\n    label,\n    name,\n    showInlineError\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"disabled\", \"error\", \"errorMessage\", \"fields\", \"grouped\", \"itemProps\", \"label\", \"name\", \"showInlineError\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: classnames(className, {\n      disabled,\n      error,\n      grouped\n    }, 'fields')\n  }, filterDOMProps(props)), label && React.createElement(\"div\", {\n    className: \"field\"\n  }, React.createElement(\"label\", null, label)), !!(error && showInlineError) && React.createElement(\"div\", {\n    className: \"ui red basic label\"\n  }, errorMessage), children ? injectName(name, children) : fields.map(key => React.createElement(AutoField, Object.assign({\n    key: key,\n    name: joinName(name, key)\n  }, itemProps))));\n};\n\nNest.defaultProps = {\n  grouped: true\n};\nexport default connectField(Nest, {\n  ensureValue: false,\n  includeInChain: false\n});","map":{"version":3,"sources":["/Users/joshisj/IdeaProjects/secondary/node_modules/uniforms-semantic/es6/NestField.js"],"names":["__rest","React","classnames","connectField","filterDOMProps","injectName","joinName","AutoField","Nest","_a","children","className","disabled","error","errorMessage","fields","grouped","itemProps","label","name","showInlineError","props","createElement","Object","assign","map","key","defaultProps","ensureValue","includeInChain"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,UAAvC,EAAmDC,QAAnD,QAAmE,UAAnE;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,IAAI,GAAIC,EAAD,IAAQ;AACjB,MAAI;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,QAAvB;AAAiCC,IAAAA,KAAjC;AAAwCC,IAAAA,YAAxC;AAAsDC,IAAAA,MAAtD;AAA8DC,IAAAA,OAA9D;AAAuEC,IAAAA,SAAvE;AAAkFC,IAAAA,KAAlF;AAAyFC,IAAAA,IAAzF;AAA+FC,IAAAA;AAA/F,MAAmHX,EAAvH;AAAA,MAA2HY,KAAK,GAAGrB,MAAM,CAACS,EAAD,EAAK,CAAC,UAAD,EAAa,WAAb,EAA0B,UAA1B,EAAsC,OAAtC,EAA+C,cAA/C,EAA+D,QAA/D,EAAyE,SAAzE,EAAoF,WAApF,EAAiG,OAAjG,EAA0G,MAA1G,EAAkH,iBAAlH,CAAL,CAAzI;;AACA,SAAQR,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2BC,MAAM,CAACC,MAAP,CAAc;AAAEb,IAAAA,SAAS,EAAET,UAAU,CAACS,SAAD,EAAY;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBG,MAAAA;AAAnB,KAAZ,EAA0C,QAA1C;AAAvB,GAAd,EAA4FZ,cAAc,CAACiB,KAAD,CAA1G,CAA3B,EACJH,KAAK,IAAKjB,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAAEX,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACNV,KAAK,CAACqB,aAAN,CAAoB,OAApB,EAA6B,IAA7B,EAAmCJ,KAAnC,CADM,CADN,EAGJ,CAAC,EAAEL,KAAK,IAAIO,eAAX,CAAD,IAAiCnB,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAAEX,IAAAA,SAAS,EAAE;AAAb,GAA3B,EAAgEG,YAAhE,CAH7B,EAIJJ,QAAQ,GACFL,UAAU,CAACc,IAAD,EAAOT,QAAP,CADR,GAEFK,MAAM,CAACU,GAAP,CAAWC,GAAG,IAAKzB,KAAK,CAACqB,aAAN,CAAoBf,SAApB,EAA+BgB,MAAM,CAACC,MAAP,CAAc;AAAEE,IAAAA,GAAG,EAAEA,GAAP;AAAYP,IAAAA,IAAI,EAAEb,QAAQ,CAACa,IAAD,EAAOO,GAAP;AAA1B,GAAd,EAAuDT,SAAvD,CAA/B,CAAnB,CANF,CAAR;AAOH,CATD;;AAUAT,IAAI,CAACmB,YAAL,GAAoB;AAAEX,EAAAA,OAAO,EAAE;AAAX,CAApB;AACA,eAAeb,YAAY,CAACK,IAAD,EAAO;AAC9BoB,EAAAA,WAAW,EAAE,KADiB;AAE9BC,EAAAA,cAAc,EAAE;AAFc,CAAP,CAA3B","sourcesContent":["import { __rest } from \"tslib\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport { connectField, filterDOMProps, injectName, joinName } from 'uniforms';\nimport AutoField from './AutoField';\nconst Nest = (_a) => {\n    var { children, className, disabled, error, errorMessage, fields, grouped, itemProps, label, name, showInlineError } = _a, props = __rest(_a, [\"children\", \"className\", \"disabled\", \"error\", \"errorMessage\", \"fields\", \"grouped\", \"itemProps\", \"label\", \"name\", \"showInlineError\"]);\n    return (React.createElement(\"div\", Object.assign({ className: classnames(className, { disabled, error, grouped }, 'fields') }, filterDOMProps(props)),\n        label && (React.createElement(\"div\", { className: \"field\" },\n            React.createElement(\"label\", null, label))),\n        !!(error && showInlineError) && (React.createElement(\"div\", { className: \"ui red basic label\" }, errorMessage)),\n        children\n            ? injectName(name, children)\n            : fields.map(key => (React.createElement(AutoField, Object.assign({ key: key, name: joinName(name, key) }, itemProps))))));\n};\nNest.defaultProps = { grouped: true };\nexport default connectField(Nest, {\n    ensureValue: false,\n    includeInChain: false,\n});\n"]},"metadata":{},"sourceType":"module"}